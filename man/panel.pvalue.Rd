% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/panel_pvalue.R
\name{panel.pvalue}
\alias{panel.pvalue}
\title{Calculate and draw p-values in lattice plots}
\usage{
panel.pvalue(
  x,
  y,
  std = NULL,
  symbol = TRUE,
  pvalue = FALSE,
  pval_digits = 2,
  cex = 0.8,
  offset = 1,
  fixed_pos = NULL,
  verbose = FALSE,
  alternative = "two.sided",
  col = trellis.par.get()$plot.symbol$col,
  ...
)
}
\arguments{
\item{x, y}{(numeric, character) variables to be plotted. The x variable 
is treated as a grouping varibale, i.e. p-values are calculated between groups
of unique x values.}

\item{std}{(character, numeric) the value of x that is used as standard. If NULL, the 
first value is used as standard. If a numeric scalar i, std is determined 
as the i'th element of unique(x). If character, it must be one of x. If 
std = 'all_values', each unique group of x is compared to the total population}

\item{symbol}{(logical) if '*' symbols should be drawn for significance}

\item{pvalue}{(logical) if numeric p-values should be drawn for significance}

\item{pval_digits}{(numeric) how many p-value digits should be printed (default is 2)}

\item{cex}{(numeric) character size of the symbol}

\item{offset}{(numeric) offset added to the the vertical position of the p-value}

\item{fixed_pos}{(numeric) vertical position of the p-value, 
if NULL determined from the data}

\item{verbose}{(logical) if a summary of the p-value calculation should be 
printed to the terminal}

\item{alternative}{(character) Passed to t.test(), one of "two.sided", "less", or "greater"}

\item{col}{(character) the color to be used}

\item{...}{other arguments passed to the function}
}
\description{
Custom panel functions for lattice plots
}
\examples{
library(lattice)
data(mtcars)

# p-values are calculated between groups of x, grouping variable is ignored
xyplot(mpg ~ factor(cyl), mtcars, groups = cyl, pch = 19, cex = 0.7,
  panel = function(x, y, ...) {
    panel.stripplot(x, y, jitter.data = TRUE, 
      horizontal = FALSE, amount = 0.15, ...)
    panel.pvalue(x, y, std = 1, symbol = TRUE, pvalue = TRUE)
})

}
